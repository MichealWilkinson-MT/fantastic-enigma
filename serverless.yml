service: fantastic-enigma
variablesResolutionMode: 20210326
frameworkVersion: "2"

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221
  iam:
    role: ${ssm:/fantastic-enigma/${opt:stage}/lambda/role-arn}

  # you can overwrite defaults here
  stage: dev
  region: eu-west-2

package:
  patterns:
    - "!./**"
    - ./bin/**

functions:
  dynamodbWriter:
    name: fantastic-enigma-${opt:stage}-dynamodb-writer
    role: ${ssm:/fantastic-enigma/${opt:stage}/lambda/role-arn} # This is how lambda's get a different role per lambda
    handler: bin/dynamodb-writer
    events:
      - sqs: ${ssm:/fantastic-enigma/${opt:stage}/inputQueue/arn}
    environment:
      DATABASE_REGION: ${ssm:/fantastic-enigma/${opt:stage}/database-region}
      DYNAMODB_TABLE_NAME: ${ssm:/fantastic-enigma/${opt:stage}/database-name}
  dynamodbReader:
    name: fantastic-enigma-${opt:stage}-dynamodb-reader
    role: ${ssm:/fantastic-enigma/${opt:stage}/lambda/read-role-arn} # This is how lambda's get a different role per lambda
    handler: bin/dynamodb-reader
    environment:
      DATABASE_REGION: ${ssm:/fantastic-enigma/${opt:stage}/database-region}
      DYNAMODB_TABLE_NAME: ${ssm:/fantastic-enigma/${opt:stage}/database-name}
